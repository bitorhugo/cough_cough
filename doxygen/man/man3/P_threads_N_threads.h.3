.TH "P_threads_N_threads/P_threads_N_threads.h" 3 "Tue Jun 7 2022" "cough_cough" \" -*- nroff -*-
.ad l
.nh
.SH NAME
P_threads_N_threads/P_threads_N_threads.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <parser/parser\&.h>\fP
.br
\fC#include 'io/io\&.h'\fP
.br
\fC#include '\&.\&./from_N_threads_to_file/from_N_threads_to_file\&.h'\fP
.br
\fC#include <mach/semaphore\&.h>\fP
.br
\fC#include <mach/mach_init\&.h>\fP
.br
\fC#include <mach/task\&.h>\fP
.br
\fC#include <mach/mach_error\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBconsumer_data\fP"
.br
.ti -1c
.RI "struct \fBshared_dt\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBINT2VOIDP\fP(i)   (void*)(uintptr_t)(i)"
.br
.ti -1c
.RI "#define \fBMAX_DT_SZ\fP   128"
.br
.ti -1c
.RI "#define \fBARR_SZ\fP   128"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBconsumer_data\fP \fBCONSUMER_DATA\fP"
.br
.ti -1c
.RI "typedef struct \fBshared_dt\fP \fBSHARED_DT\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBP_threads_N_threads\fP (int p_threads, int n_threads, \fBDATASET\fP data, int)"
.br
.ti -1c
.RI "void \fBoccupation_v3\fP (const \fBTHREAD_DATA\fP *td, int \fBline\fP)"
.br
.ti -1c
.RI "void \fBwrite_to_shared_dt\fP (int thread_id, size_t current_ts, int *\fBoccupation\fP)"
.br
.ti -1c
.RI "void \fBwrite_to_fd_v3\fP (char *buffer, const \fBCONSUMER_DATA\fP *cd)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBSHARED_DT\fP \fBdt\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define ARR_SZ   128"

.SS "#define INT2VOIDP(i)   (void*)(uintptr_t)(i)"

.SS "#define MAX_DT_SZ   128"

.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBconsumer_data\fP \fBCONSUMER_DATA\fP"

.SS "typedef struct \fBshared_dt\fP \fBSHARED_DT\fP"

.SH "Function Documentation"
.PP 
.SS "void occupation_v3 (const \fBTHREAD_DATA\fP * td, int line)"
calculates occupation 
.PP
\fBParameters:\fP
.RS 4
\fItd\fP thread data 
.br
\fIline\fP line number 
.RE
.PP

.SS "void P_threads_N_threads (int p_threads, int n_threads, \fBDATASET\fP data, int)"
producer consumer paradigm 
.PP
\fBParameters:\fP
.RS 4
\fIp_threads\fP number of producer threads 
.br
\fIn_threads\fP number of consumer threads 
.br
\fIdata\fP data 
.RE
.PP

.SS "void write_to_fd_v3 (char * buffer, const \fBCONSUMER_DATA\fP * cd)"
consumer threads write to file 
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP data 
.br
\fIcd\fP data 
.RE
.PP

.SS "void write_to_shared_dt (int thread_id, size_t current_ts, int * occupation)"
producer threads write to a shared array 
.PP
\fBParameters:\fP
.RS 4
\fIthread_id\fP thread id 
.br
\fIcurrent_ts\fP current unix timestamp 
.br
\fIoccupation\fP number of people in the room 
.RE
.PP

.SH "Variable Documentation"
.PP 
.SS "\fBSHARED_DT\fP dt"

.SH "Author"
.PP 
Generated automatically by Doxygen for cough_cough from the source code\&.
