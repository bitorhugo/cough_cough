.TH "libs/io/io.c" 3 "Tue Jun 7 2022" "cough_cough" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libs/io/io.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'io\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "ssize_t \fBreadn\fP (int fd, void *ptr, size_t n)"
.br
.ti -1c
.RI "ssize_t \fBwriten\fP (int fd, const void *ptr, size_t n)"
.br
.ti -1c
.RI "ssize_t \fBn_years_dataset\fP (\fBDATASET\fP data)"
.br
.ti -1c
.RI "uint32_t \fBfirst_ts\fP (\fBDATASET\fP data)"
.br
.ti -1c
.RI "void \fBfrom_parent_to_file\fP (int fd_out, int fd_pipe)"
.br
.ti -1c
.RI "void \fBfrom_parent_to_M_processes\fP (int fd_read, size_t M, uint32_t \fBfirst_ts\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBflag\fP = 0"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "uint32_t first_ts (\fBDATASET\fP data)"
retrieves the first timestamp from data 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP data 
.RE
.PP
\fBReturns:\fP
.RS 4
first unix timestamp 
.RE
.PP

.SS "void from_parent_to_file (int fd_out, int fd_pipe)"
write from parent process to output file all data 
.PP
\fBParameters:\fP
.RS 4
\fIfd_out\fP file descriptor of file to write to 
.br
\fIfd_pipe\fP file descriptor of pipe of whom to read 
.RE
.PP

.SS "void from_parent_to_M_processes (int fd_read, size_t M, uint32_t first_ts)"
sends data from the parent process to M child processes 
.PP
\fBParameters:\fP
.RS 4
\fIfd_read\fP file descriptor to read from 
.br
\fIM\fP number of M processes 
.br
\fIfirst_ts\fP first timestamp in data 
.RE
.PP

.SS "ssize_t n_years_dataset (\fBDATASET\fP data)"
calculates number of years in Dataset 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP dataset 
.RE
.PP
\fBReturns:\fP
.RS 4
number of years 
.RE
.PP

.SS "ssize_t readn (int fd, void * ptr, size_t n)"
reads from File Descriptor 
.PP
\fBParameters:\fP
.RS 4
\fIfd\fP file descriptor to read from 
.br
\fIptr\fP variable to read to 
.br
\fIn\fP size in bytes to read 
.RE
.PP
\fBReturns:\fP
.RS 4
-1 if error occured | >0 number of bytes read 
.RE
.PP

.SS "ssize_t writen (int fd, const void * ptr, size_t n)"
write from File Descriptor 
.PP
\fBParameters:\fP
.RS 4
\fIfd\fP file descriptor to write from 
.br
\fIptr\fP variable to write to 
.br
\fIn\fP size in bytes to written 
.RE
.PP
\fBReturns:\fP
.RS 4
-1 if error occurred | >0 number of bytes written 
.RE
.PP

.SH "Variable Documentation"
.PP 
.SS "int flag = 0"

.SH "Author"
.PP 
Generated automatically by Doxygen for cough_cough from the source code\&.
