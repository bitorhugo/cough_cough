.TH "libs/queue/queue.c" 3 "Tue Jun 7 2022" "cough_cough" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libs/queue/queue.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'queue\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBenqueue\fP (\fBQUEUE\fP *\fBqueue\fP, \fBNODE\fP *item)"
.br
.ti -1c
.RI "\fBNODE\fP * \fBdequeue\fP (\fBQUEUE\fP *\fBqueue\fP)"
.br
.ti -1c
.RI "int \fBget_queue_size\fP (\fBQUEUE\fP *\fBqueue\fP)"
.br
.ti -1c
.RI "int \fBis_queue_empty\fP (\fBQUEUE\fP *\fBqueue\fP)"
.br
.ti -1c
.RI "\fBNODE\fP * \fBpeek\fP (\fBQUEUE\fP *\fBqueue\fP)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBNODE\fP* dequeue (\fBQUEUE\fP * queue)"
dequeues a node from queue 
.PP
\fBParameters:\fP
.RS 4
\fIqueue\fP data structure 
.RE
.PP
\fBReturns:\fP
.RS 4
dequeued node 
.RE
.PP

.SS "void enqueue (\fBQUEUE\fP * queue, \fBNODE\fP * item)"
enqueues a node 
.PP
\fBParameters:\fP
.RS 4
\fIqueue\fP data structure 
.br
\fIitem\fP item to enqueue 
.RE
.PP

.SS "int get_queue_size (\fBQUEUE\fP * queue)"
retrieves queue size 
.PP
\fBParameters:\fP
.RS 4
\fIqueue\fP data structure 
.RE
.PP
\fBReturns:\fP
.RS 4
size of queue 
.RE
.PP

.SS "int is_queue_empty (\fBQUEUE\fP * queue)"
checks if queue is empty 
.PP
\fBParameters:\fP
.RS 4
\fIqueue\fP data structure 
.RE
.PP
\fBReturns:\fP
.RS 4
1 if empty || 0 if not empty 
.RE
.PP

.SS "\fBNODE\fP* peek (\fBQUEUE\fP * queue)"
retrieves first node from queue 
.PP
\fBParameters:\fP
.RS 4
\fIqueue\fP data structure 
.RE
.PP
\fBReturns:\fP
.RS 4
first node 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for cough_cough from the source code\&.
